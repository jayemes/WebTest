{"version":3,"sources":["Res/help-24px.svg","Components/ThreeDElement.js","Components/Slider.js","Components/Rete.js","Components/Nodes.js","Components/Help.js","Components/App.js","serviceWorker.js","index.js"],"names":["module","exports","ThreeDElement","myRef","React","createRef","canvas","myScene","renderer","THREE","setSize","this","domElement","id","scene","camera","position","set","lookAt","controls","OrbitControls","add","createGeometry","generatePoints","render","animate","requestAnimationFrame","update","points","r1","props","r2","k0","k1","k2","nopsHigh","nops","i","nopsLow","x1","Math","sin","cos","y1","z1","x","y","z","push","output","delta","Number","parseFloat","generatePointsByNodes","createLineGeometry","lines","name","material","createPositionalMaterial","geometry","setFromPoints","line","length","color","setHSL","cube","random","c","xMax","max","map","it","xMin","min","yMax","yMin","zMax","zMin","fShader","vertexShader","fragmentShader","uniforms","obj","getObjectByName","remove","createCanvas","current","appendChild","updateScene","ref","Component","Slider","config","digits","log10","step","valText","Intl","NumberFormat","minimumFractionDigits","format","val","className","htmlFor","type","value","onChange","numSocket","Rete","Socket","vectorSocket","NumControl","emitter","key","node","readonly","component","initial","data","v","setValue","trigger","putData","Control","addEventListener","e","stopPropagation","target","FunctionControl","style","OutputComponent","handler","vInput","Input","addInput","inputs","outputs","vector","SphereComponent","out1","Output","inpRad","inpK","addControl","editor","addOutput","r","rad","k","sphere","CubeComponent","pow","CustomComponent","fx","fy","fz","setColor","Function","isNaN","Error","error","custom","NumComponent","ctrl","num","AddComponent","inp1","inp2","out","sum","num1","num2","nodes","find","n","get","AnimateComponent","intervalId","progress","TIMER_INTERVAL","sinProgress","unformatted","round","cb","bind","setInterval","AddFunctionsComponent","f1","f2","g","container","outputHandler","a","components","NodeEditor","use","ConnectionPlugin","ReactRenderPlugin","AreaPlugin","ContextMenuPlugin","searchBar","delay","engine","Engine","register","createNode","addFun","anim","addNode","connect","on","abort","process","toJSON","clearInterval","view","resize","zoomAt","Nodes","createEditor","handleOutput","Help","onClick","close","App","state","showHelp","handleChange","toggleHelp","sliders","setState","prev","console","log","prevState","action","item","idx","src","icon","alt","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.83ac6ed4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/help-24px.bca12a0f.svg\";","import * as THREE from 'three'\r\nimport React from 'react'\r\nimport '../Style/ThreeDElement.css'\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\n\r\nclass ThreeDElement extends React.Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.myRef = React.createRef();\r\n        this.canvas = null\r\n        this.myScene = null\r\n    }\r\n\r\n    createCanvas() {\r\n        var renderer = new THREE.WebGLRenderer();\r\n        renderer.setSize(500, 500, false);\r\n        this.canvas = renderer.domElement\r\n        this.canvas.id = \"3DC\"\r\n\r\n        var scene = new THREE.Scene();\r\n        var camera = new THREE.PerspectiveCamera(75, 1, 0.1, 1000);\r\n\r\n        camera.position.set(70, 70, 70);\r\n        camera.lookAt(0, 0, 0);\r\n\r\n        const controls = new OrbitControls(camera, renderer.domElement);\r\n\r\n        scene.add(this.createGeometry(this.generatePoints()))\r\n\r\n        renderer.render(scene, camera);\r\n\r\n        function animate() {\r\n            requestAnimationFrame(animate);\r\n\r\n            controls.update();\r\n            renderer.render(scene, camera);\r\n        }\r\n\r\n        animate()\r\n        return scene\r\n    }\r\n\r\n    generatePointsOG() {\r\n        var points = [];\r\n\r\n        const r1 = this.props.r1\r\n        const r2 = this.props.r2\r\n\r\n        const k0 = this.props.k0\r\n        const k1 = this.props.k1\r\n\r\n        const k2 = this.props.k2\r\n\r\n        const nopsLow = 0\r\n        const nopsHigh = this.props.nops || 2000\r\n        const delta = .02;\r\n\r\n        for (let i = nopsLow * delta; i <= nopsHigh * delta; i += delta) {\r\n\r\n            const x1 = r1 * Math.sin(k0 * i) * Math.cos(k1 * i);\r\n            const y1 = r1 * Math.sin(k0 * i) * Math.sin(k1 * i);\r\n            const z1 = r1 * Math.cos(k0 * i) + i;\r\n            //z = i;\r\n\r\n            const x2 = r2 * Math.sin(k2 * i) * Math.cos(k2 * i);\r\n            const y2 = r2 * Math.sin(k2 * i) * Math.sin(k2 * i);\r\n            const z2 = r2 * Math.cos(k2 * i);\r\n\r\n            const x = x1 + x2\r\n            const y = y1 + y2\r\n            const z = z1 + z2\r\n\r\n            points.push(new THREE.Vector3(x, y, z));\r\n        }\r\n        return points\r\n    }\r\n\r\n    generatePointsByNodes() {\r\n        var points = [];\r\n\r\n        const output = this.props.output\r\n\r\n        if (!output) return []\r\n\r\n        const nopsLow = 0.0\r\n        const nopsHigh = this.props.nops || 2000\r\n        const delta = Number.parseFloat(this.props.delta)\r\n\r\n        for (let i = nopsLow * delta; i <= nopsHigh * delta; i += delta) {\r\n            const x = output['x'](i)\r\n            const y = output['y'](i)\r\n            const z = output['z'](i)\r\n\r\n            points.push(new THREE.Vector3(x, y, z));\r\n        }\r\n\r\n        // console.log(points)\r\n        return points\r\n    }\r\n\r\n    generatePoints() {\r\n        // return this.generatePointsOG()\r\n        return this.generatePointsByNodes()\r\n\r\n    }\r\n\r\n\r\n    createGeometry(points) {\r\n        return this.createLineGeometry(points)\r\n        // return this.createCubesGeometry(points)\r\n    }\r\n\r\n    // createGeometryBySegments(points) {\r\n    //     const lines = new THREE.Object3D()\r\n    //     lines.name = \"Lines\"\r\n\r\n    //     const nops = points.length\r\n    //     let material = null\r\n\r\n    //     for (let i = 0; i < nops - 1; i++) {\r\n    //         const start = points[i]\r\n    //         const end = points[i + 1]\r\n\r\n    //         material = new THREE.LineBasicMaterial({});\r\n    //         material.color.setHSL(i / nops, 1, 0.5)\r\n\r\n    //         var geometry = new THREE.BufferGeometry().setFromPoints([start, end]);\r\n    //         var line = new THREE.Line(geometry, material);\r\n    //         lines.add(line);\r\n    //     }\r\n    //     return lines\r\n    // }\r\n\r\n    createLineGeometry(points) {\r\n        const lines = new THREE.Object3D()\r\n        lines.name = \"Lines\"\r\n\r\n        const material = this.createPositionalMaterial(points)\r\n\r\n        var geometry = new THREE.BufferGeometry().setFromPoints(points);\r\n        var line = new THREE.Line(geometry, material);\r\n        lines.add(line);\r\n\r\n        return lines\r\n    }\r\n\r\n    createCubesGeometry(points) {\r\n        const lines = new THREE.Object3D()\r\n        lines.name = \"Lines\"\r\n\r\n        const nops = points.length\r\n\r\n\r\n        const geometry = new THREE.IcosahedronBufferGeometry(1)\r\n\r\n        for (let i = 0; i < nops - 1; i += 5) {\r\n            let material = new THREE.MeshBasicMaterial({});\r\n            material.color.setHSL(i / nops, 1, 0.5)\r\n            var cube = new THREE.Mesh(geometry, material);\r\n            cube.position.set(points[i].x + Math.random(), points[i].y, points[i].z)\r\n            lines.add(cube);\r\n        }\r\n        return lines\r\n    }\r\n\r\n    createPositionalMaterial(points) {\r\n\r\n        if (points.length > 0) {\r\n            const c = 0.0001 // Quick fix to avoid formating the numbers \r\n\r\n            const xMax = Math.max(...points.map(it => it.x)) + c\r\n            const xMin = Math.min(...points.map(it => it.x)) + c\r\n\r\n            const yMax = Math.max(...points.map(it => it.y)) + c\r\n            const yMin = Math.min(...points.map(it => it.y)) + c\r\n\r\n            const zMax = Math.max(...points.map(it => it.z)) + c\r\n            const zMin = Math.min(...points.map(it => it.z)) + c\r\n\r\n            const vShader = `\r\n                varying vec3 pos;\r\n    \r\n                void main() {\r\n                pos = position;\r\n                gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n                }\r\n                `\r\n            const fShader = `\r\n                varying vec3 pos;\r\n    \r\n                void main() {\r\n                gl_FragColor = vec4((0.2 + 0.8*(pos.x-(${xMin}))/((${xMax})-(${xMin}))),\r\n                                    (0.2 + 0.8*(pos.y-(${yMin}))/((${yMax})-(${yMin}))),\r\n                                    (0.2 + 0.8*(pos.z-(${zMin}))/((${zMax})-(${zMin}))),\r\n                                    1.0).rgba;\r\n                }\r\n                `\r\n\r\n            return new THREE.ShaderMaterial({\r\n                vertexShader: vShader,\r\n                fragmentShader: fShader,\r\n                uniforms: {}\r\n            });\r\n        }\r\n\r\n        return new THREE.LineBasicMaterial()\r\n\r\n    }\r\n\r\n    updateScene() {\r\n        const obj = this.myScene.getObjectByName(\"Lines\")\r\n        this.myScene.remove(obj)\r\n        this.myScene.add(this.createGeometry(this.generatePoints()))\r\n    }\r\n\r\n    componentDidMount() {\r\n        // console.log(\"Mount\")\r\n        this.myScene = this.createCanvas()\r\n        this.myRef.current.appendChild(this.canvas)\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        // console.log(\"Update\")\r\n        this.updateScene(this.myScene)\r\n    }\r\n\r\n    render() {\r\n\r\n        // return container\r\n        return (\r\n            <div id=\"canvas-container\" ref={this.myRef}></div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default ThreeDElement\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport '../Style/Slider.css'\r\n\r\nclass Slider extends React.Component {\r\n\r\n    render() {\r\n        const config = this.props.config\r\n        const digits = Math.max(0, 1 - Math.log10(config.step))\r\n        let valText = new Intl.NumberFormat('es-GB', { minimumFractionDigits: digits }).format(this.props.val)\r\n\r\n        return (\r\n            <div className=\"slider-container\">\r\n                <label htmlFor={config.name}>{config.name}</label>\r\n                <input\r\n                    type=\"range\"\r\n                    name={config.name}\r\n                    id={config.name}\r\n                    min={config.min}\r\n                    max={config.max}\r\n                    step={config.step}\r\n                    value={this.props.val}\r\n                    onChange={config.onChange}\r\n                />\r\n                <span className=\"slider-value\" >{valText}</span>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Slider","import Rete from 'rete'\r\nimport React from 'react'\r\n// import Slider from './Slider'\r\n\r\nimport ConnectionPlugin from 'rete-connection-plugin'\r\nimport ReactRenderPlugin from 'rete-react-render-plugin'\r\nimport AreaPlugin from 'rete-area-plugin'\r\nimport ContextMenuPlugin from 'rete-context-menu-plugin';\r\n\r\nvar numSocket = new Rete.Socket(\"Number value\");\r\nvar vectorSocket = new Rete.Socket(\"Vector value\");\r\n\r\n// const config = {\r\n//     name: \"k0\",\r\n//     min: -10,\r\n//     max: 10,\r\n//     step: 0.1,\r\n//     onChange: null\r\n// }\r\n\r\nclass NumControl extends Rete.Control {\r\n\r\n    static component = ({ value, onChange }) => (\r\n        <div className=\"\">\r\n            <input\r\n                type=\"number\"\r\n                value={value}\r\n                step={this.step}\r\n                ref={ref => {\r\n                    ref && ref.addEventListener(\"pointerdown\", e => e.stopPropagation());\r\n                }}\r\n                onChange={e => onChange(+e.target.value)}\r\n            />\r\n            {/* <Slider config={config} /> */}\r\n        </div>\r\n\r\n    );\r\n\r\n    constructor(emitter, key, node, readonly = false, step = 0.5) {\r\n        super(key);\r\n        this.emitter = emitter;\r\n        this.key = key;\r\n        this.component = NumControl.component;\r\n        this.step = step\r\n\r\n        const initial = node.data[key] || 1;\r\n\r\n        node.data[key] = initial;\r\n        this.props = {\r\n            readonly,\r\n            value: initial,\r\n            onChange: v => {\r\n                this.setValue(v);\r\n                this.emitter.trigger(\"process\");\r\n            }\r\n        };\r\n    }\r\n\r\n    setValue(val) {\r\n        this.props.value = val;\r\n        this.putData(this.key, val);\r\n        this.update();\r\n    }\r\n}\r\n\r\nclass FunctionControl extends Rete.Control {\r\n\r\n    static component = ({ value, onChange, color }) => (\r\n        <div className=\"\" >\r\n            <input style={{ 'color': color }}\r\n                type=\"text\"\r\n                value={value}\r\n                ref={ref => {\r\n                    ref && ref.addEventListener(\"pointerdown\", e => e.stopPropagation());\r\n                }}\r\n                onChange={e => onChange(e.target.value)}\r\n            />\r\n        </div>\r\n\r\n    );\r\n\r\n    constructor(emitter, key, node, readonly = false) {\r\n        super(key);\r\n        this.emitter = emitter;\r\n        this.key = key;\r\n        this.component = FunctionControl.component;\r\n\r\n        const initial = node.data[key] || \"5*i\";\r\n\r\n        node.data[key] = initial;\r\n        this.props = {\r\n            color: 'black',\r\n            readonly,\r\n            value: initial,\r\n            onChange: v => {\r\n                this.setValue(v);\r\n                this.emitter.trigger(\"process\");\r\n            }\r\n        };\r\n    }\r\n\r\n    setValue(val) {\r\n        this.props.value = val;\r\n        this.putData(this.key, val);\r\n        this.update();\r\n    }\r\n\r\n    setColor(color) {\r\n        this.props.color = color\r\n        this.update()\r\n    }\r\n}\r\n\r\nclass OutputComponent extends Rete.Component {\r\n    constructor(handler) {\r\n        super(\"Output\")\r\n        this.handler = handler\r\n    }\r\n\r\n    builder(node) {\r\n        var vInput = new Rete.Input(\"v3\", \"Vector\", vectorSocket)\r\n\r\n        return node\r\n            .addInput(vInput)\r\n    }\r\n\r\n    worker(node, inputs, outputs) {\r\n\r\n        const vector = inputs['v3'][0]\r\n        this.handler(vector)\r\n    }\r\n}\r\n\r\nclass SphereComponent extends Rete.Component {\r\n    constructor() {\r\n        super(\"Sphere\");\r\n    }\r\n\r\n    builder(node) {\r\n        const out1 = new Rete.Output(\"v3\", \"Vector\", vectorSocket);\r\n        const inpRad = new Rete.Input(\"rad\", \"Radius\", numSocket)\r\n        const inpK = new Rete.Input(\"k\", \"K\", numSocket)\r\n\r\n        inpRad.addControl(new NumControl(this.editor, \"rad\", node))\r\n        inpK.addControl(new NumControl(this.editor, \"k\", node))\r\n\r\n        return node\r\n            .addOutput(out1)\r\n            .addInput(inpRad)\r\n            .addInput(inpK)\r\n    }\r\n\r\n    worker(node, inputs, outputs) {\r\n        const r = inputs[\"rad\"].length ? inputs[\"rad\"][0] : node.data.rad\r\n        const k = inputs[\"k\"].length ? inputs[\"k\"][0] : node.data.k\r\n        const sphere = {\r\n            x: function (i) { return r * Math.sin(k * i) * Math.cos(i) },\r\n            y: function (i) { return r * Math.sin(k * i) * Math.sin(i) },\r\n            z: function (i) { return r * Math.cos(k * i) }\r\n        }\r\n\r\n        outputs[\"v3\"] = sphere\r\n    }\r\n}\r\n\r\nclass CubeComponent extends Rete.Component {\r\n    constructor() {\r\n        super(\"Cube\");\r\n    }\r\n\r\n    builder(node) {\r\n        const out1 = new Rete.Output(\"v3\", \"Vector\", vectorSocket);\r\n        const inpRad = new Rete.Input(\"rad\", \"Radius\", numSocket)\r\n        const inpK = new Rete.Input(\"k\", \"K\", numSocket)\r\n\r\n        inpRad.addControl(new NumControl(this.editor, \"rad\", node))\r\n        inpK.addControl(new NumControl(this.editor, \"k\", node))\r\n\r\n        return node\r\n            .addOutput(out1)\r\n            .addInput(inpRad)\r\n            .addInput(inpK)\r\n    }\r\n\r\n    worker(node, inputs, outputs) {\r\n        const r = inputs[\"rad\"].length ? inputs[\"rad\"][0] : node.data.rad\r\n        const k = inputs[\"k\"].length ? inputs[\"k\"][0] : node.data.k\r\n        const cube = {\r\n            x: function (i) { return r * Math.sin(i) * Math.cos(k * i) / Math.pow(Math.pow(Math.sin(i), 6) * (Math.pow(Math.sin(k * i), 6) + Math.pow(Math.cos(k * i), 6)) + Math.pow(Math.cos(i), 6), 1 / 6); },\r\n            y: function (i) { return r * Math.sin(i) * Math.sin(k * i) / Math.pow(Math.pow(Math.sin(i), 6) * (Math.pow(Math.sin(k * i), 6) + Math.pow(Math.cos(k * i), 6)) + Math.pow(Math.cos(i), 6), 1 / 6); },\r\n            z: function (i) { return r * Math.cos(i) / Math.pow(Math.pow(Math.sin(i), 6) * (Math.pow(Math.sin(k * i), 6) + Math.pow(Math.cos(k * i), 6)) + Math.pow(Math.cos(i), 6), 1 / 6); }\r\n        }\r\n\r\n        outputs[\"v3\"] = cube\r\n    }\r\n}\r\n\r\nclass CustomComponent extends Rete.Component {\r\n    constructor() {\r\n        super(\"Custom\");\r\n\r\n    }\r\n\r\n    builder(node) {\r\n        var out1 = new Rete.Output(\"v3\", \"Vector\", vectorSocket);\r\n        this.controls = {\r\n            fx: new FunctionControl(this.editor, \"fx\", node),\r\n            fy: new FunctionControl(this.editor, \"fy\", node),\r\n            fz: new FunctionControl(this.editor, \"fz\", node)\r\n        }\r\n\r\n        return node\r\n            .addControl(this.controls.fx)\r\n            .addControl(this.controls.fy)\r\n            .addControl(this.controls.fz)\r\n            .addOutput(out1);\r\n    }\r\n\r\n    worker(node, inputs, outputs) {\r\n        let fx\r\n        let fy\r\n        let fz\r\n\r\n        this.controls.fx.setColor('black')\r\n        this.controls.fy.setColor('black')\r\n        this.controls.fz.setColor('black')\r\n\r\n        try {\r\n            fx = new Function(\"i\", \"return \" + node.data.fx)\r\n            fy = new Function(\"i\", \"return \" + node.data.fy)\r\n            fz = new Function(\"i\", \"return \" + node.data.fz)\r\n\r\n            if (isNaN(fx(0.5))) throw new Error('fx error')\r\n            if (isNaN(fy(0.5))) throw new Error('fy error')\r\n            if (isNaN(fz(0.5))) throw new Error('fz error')\r\n\r\n        } catch (error) {\r\n            fx = function (i) { return 0 }\r\n            fy = function (i) { return 0 }\r\n            fz = function (i) { return 0 }\r\n            this.controls.fx.setColor('red')\r\n            this.controls.fy.setColor('red')\r\n            this.controls.fz.setColor('red')\r\n\r\n        }\r\n\r\n        const custom = {\r\n            x: fx,\r\n            y: fy,\r\n            z: fz,\r\n        }\r\n\r\n        outputs[\"v3\"] = custom\r\n    }\r\n}\r\n\r\nclass NumComponent extends Rete.Component {\r\n    constructor() {\r\n        super(\"Number\");\r\n    }\r\n\r\n    builder(node) {\r\n        var out1 = new Rete.Output(\"num\", \"Number\", numSocket);\r\n        var ctrl = new NumControl(this.editor, \"num\", node);\r\n\r\n        return node.addControl(ctrl).addOutput(out1);\r\n    }\r\n\r\n    worker(node, inputs, outputs) {\r\n        outputs[\"num\"] = node.data.num;\r\n    }\r\n}\r\n\r\nclass AddComponent extends Rete.Component {\r\n    constructor() {\r\n        super(\"Add\");\r\n    }\r\n\r\n    builder(node) {\r\n        var inp1 = new Rete.Input(\"num1\", \"Number\", numSocket);\r\n        var inp2 = new Rete.Input(\"num2\", \"Number2\", numSocket);\r\n        var out = new Rete.Output(\"num\", \"Number\", numSocket);\r\n\r\n        inp1.addControl(new NumControl(this.editor, \"num1\", node));\r\n        inp2.addControl(new NumControl(this.editor, \"num2\", node));\r\n\r\n        return node\r\n            .addInput(inp1)\r\n            .addInput(inp2)\r\n            .addControl(new NumControl(this.editor, \"preview\", node, true))\r\n            .addOutput(out);\r\n    }\r\n\r\n    worker(node, inputs, outputs) {\r\n        var n1 = inputs[\"num1\"].length ? inputs[\"num1\"][0] : node.data.num1;\r\n        var n2 = inputs[\"num2\"].length ? inputs[\"num2\"][0] : node.data.num2;\r\n        var sum = n1 + n2;\r\n\r\n        this.editor.nodes\r\n            .find(n => n.id === node.id)\r\n            .controls.get(\"preview\")\r\n            .setValue(sum);\r\n        outputs[\"num\"] = sum;\r\n    }\r\n}\r\n\r\nclass AnimateComponent extends Rete.Component {\r\n\r\n    constructor() {\r\n        super(\"Animate\");\r\n        this.intervalId = null\r\n        this.progress = 0\r\n        this.TIMER_INTERVAL = 50\r\n    }\r\n\r\n    builder(node) {\r\n        var inp1 = new Rete.Input(\"min\", \"Min\", numSocket);\r\n        var inp2 = new Rete.Input(\"max\", \"Max\", numSocket);\r\n        var out = new Rete.Output(\"num\", \"Number\", numSocket);\r\n\r\n        inp1.addControl(new NumControl(this.editor, \"min\", node));\r\n        inp2.addControl(new NumControl(this.editor, \"max\", node));\r\n\r\n        return node\r\n            .addInput(inp1)\r\n            .addInput(inp2)\r\n            .addControl(new NumControl(this.editor, \"preview\", node, true))\r\n            .addOutput(out);\r\n    }\r\n\r\n    worker(node, inputs, outputs) {\r\n        this.min = inputs[\"min\"].length ? inputs[\"min\"][0] : node.data.min;\r\n        this.max = inputs[\"max\"].length ? inputs[\"max\"][0] : node.data.max;\r\n\r\n        let sinProgress = Math.sin(this.progress) / 2 + 0.5\r\n\r\n        let unformatted = this.min + sinProgress * (this.max - this.min)\r\n        this.num = Math.round(unformatted * 100000) / 100000\r\n\r\n        let cb = function () {\r\n            this.progress += 0.005\r\n            this.editor.trigger(\"process\")\r\n        }\r\n\r\n        this.cb = cb.bind(this)\r\n\r\n        if (!this.intervalId) this.intervalId = setInterval(this.cb, this.TIMER_INTERVAL)\r\n\r\n        this.editor.nodes\r\n            .find(n => n.id === node.id)\r\n            .controls.get(\"preview\")\r\n            .setValue(this.num);\r\n        outputs[\"num\"] = this.num;\r\n    }\r\n}\r\n\r\nclass AddFunctionsComponent extends Rete.Component {\r\n    constructor() {\r\n        super(\"Add Functions\");\r\n    }\r\n\r\n    builder(node) {\r\n        var f1 = new Rete.Input(\"f1\", \"F1\", vectorSocket);\r\n        var f2 = new Rete.Input(\"f2\", \"F2\", vectorSocket);\r\n        var out = new Rete.Output(\"out\", \"Result\", vectorSocket);\r\n\r\n\r\n        return node\r\n            .addInput(f1)\r\n            .addInput(f2)\r\n            .addOutput(out);\r\n    }\r\n\r\n    worker(node, inputs, outputs) {\r\n        var f1 = inputs[\"f1\"].length ? inputs[\"f1\"][0] : node.data.f1; // {x: f, y: f, z:f}\r\n        var f2 = inputs[\"f2\"].length ? inputs[\"f2\"][0] : node.data.f2;\r\n\r\n        let g\r\n\r\n        if (f1 && !f2) g = f1\r\n        if (f2 && !f1) g = f2\r\n        if (f1 && f2) {\r\n            g = {\r\n                x: function (i) { return f1.x(i) + f2.x(i) },\r\n                y: function (i) { return f1.y(i) + f2.y(i) },\r\n                z: function (i) { return f1.z(i) + f2.z(i) },\r\n            }\r\n        }\r\n\r\n        outputs[\"out\"] = g;\r\n    }\r\n}\r\n\r\nexport async function createEditor(container, outputHandler) {\r\n\r\n    var components = [\r\n        new NumComponent(),\r\n        new AddComponent(),\r\n        new OutputComponent(outputHandler),\r\n        new SphereComponent(),\r\n        new CubeComponent(),\r\n        new AddFunctionsComponent(),\r\n        new CustomComponent(),\r\n        new AnimateComponent()];\r\n\r\n    var editor = new Rete.NodeEditor(\"demo@0.1.0\", container);\r\n    editor.use(ConnectionPlugin);\r\n    editor.use(ReactRenderPlugin);\r\n    editor.use(AreaPlugin)\r\n\r\n    editor.use(ContextMenuPlugin, {\r\n        searchBar: false,\r\n        delay: 100,\r\n    });\r\n\r\n    var engine = new Rete.Engine(\"demo@0.1.0\");\r\n\r\n    components.map(c => { //TODO: ForEach \r\n        editor.register(c);\r\n        engine.register(c);\r\n        return null\r\n    });\r\n\r\n\r\n    var out = await components[2].createNode();\r\n    var sphere = await components[3].createNode({ rad: 50, k: 3.7 });\r\n    var cube = await components[4].createNode({ rad: 10, k: 7.2 });\r\n    var addFun = await components[5].createNode();\r\n    var custom = await components[6].createNode({ fx: \"0\", fy: \"0\", fz: \"i\" });\r\n    var anim = await components[7].createNode({ min: 1, max: 4 });\r\n\r\n\r\n    out.position = [600, 0]\r\n    sphere.position = [20, 0]\r\n    cube.position = [600, 200]\r\n    addFun.position = [300, 100]\r\n    custom.position = [20, 200]\r\n    anim.position = [-250, 100]\r\n\r\n    editor.addNode(out)\r\n    editor.addNode(sphere)\r\n    editor.addNode(cube)\r\n    editor.addNode(addFun)\r\n    editor.addNode(custom)\r\n    editor.addNode(anim)\r\n\r\n    editor.connect(sphere.outputs.get('v3'), addFun.inputs.get('f1'))\r\n    editor.connect(anim.outputs.get('num'), sphere.inputs.get('k'))\r\n    editor.connect(custom.outputs.get('v3'), addFun.inputs.get('f2'))\r\n    editor.connect(addFun.outputs.get('out'), out.inputs.get('v3'))\r\n\r\n    editor.on(\r\n        \"process nodecreated noderemoved connectioncreated connectionremoved\",\r\n        async () => {\r\n            await engine.abort();\r\n            await engine.process(editor.toJSON());\r\n        }\r\n\r\n    );\r\n\r\n    editor.on(\"noderemove\", node => {\r\n        if (node.name === \"Animate\") { clearInterval(node.intervalId) }\r\n    })\r\n\r\n    editor.trigger(\"process\");\r\n    editor.view.resize();\r\n    AreaPlugin.zoomAt(editor, editor.nodes);\r\n}","import React from 'react'\r\nimport { createEditor } from './Rete'\r\nimport '../Style/Nodes.css'\r\n\r\nclass Nodes extends React.Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.myRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.editor = createEditor(this.myRef.current, this.props.handleOutput)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"nodes\"\r\n                style={{ /*width: \"100vw\", height: \"100vh\" */}}\r\n                ref = {this.myRef}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Nodes","import React from 'react'\r\nimport '../Style/Help.css'\r\n\r\nclass Help extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"help-container\" onClick={this.props.close}> \r\n                <h1>Spiro v0.1</h1>\r\n                <p>This demo app was created by Juan Manuel Scasso</p>\r\n                <h2>Usage tips</h2>\r\n                <ul>\r\n                    <li>Right click on the node area to add nodes</li>\r\n                    <li>Right click on a node to delete or clone</li>\r\n                    <li>Zoom, pan and rotate the 3D image with the mouse wheel and buttons</li>\r\n                    <li>Zoom and pan the node editor in a similar way</li>\r\n                    <li>In case of bad performance decrease the number of points and increment delta (if you want to cover more range)</li>\r\n                    <li>Custom functions must use 'i' as parameter, and you can input standard Math.*</li>\r\n                    <li>This is just a technical demo, it may contain catastrophic bugs</li>\r\n                </ul>\r\n\r\n                <h2>Libraries</h2>\r\n                <ul>\r\n                    <li>THREE.js</li>\r\n                    <li>Rete.js</li>\r\n                    <li>React</li>\r\n                </ul>\r\n                <p>I'm looking for work as Full Stack or Android developer, if interested hit me up at jmscasso (gmail) </p>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Help","import React from 'react';\nimport '../Style/App.css';\nimport ThreeDElement from './ThreeDElement'\nimport Slider from './Slider'\nimport Nodes from './Nodes'\nimport Help from './Help'\nimport icon from '../Res/help-24px.svg'\n\nclass App extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            k2: 2.4,\n            r1: 30,\n            nops: 2000,\n            delta: 0.005,\n            output: null,\n            showHelp: false\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n        this.handleOutput = this.handleOutput.bind(this)\n        this.toggleHelp = this.toggleHelp.bind(this)\n\n        this.sliders = [\n            {\n                name: \"nops\",\n                min: 0,\n                max: 5000,\n                step: 20,\n                onChange: this.handleChange\n            }, {\n                name: \"delta\",\n                min: 0.005,\n                max: 1.00,\n                step: 0.005,\n                onChange: this.handleChange\n            }\n        ]\n    }\n\n    toggleHelp() {\n        this.setState(prev => ({ showHelp: !prev.showHelp }))\n        console.log(this.state.showHelp)\n    }\n\n    handleChange(e) {\n        let name = e.target.name\n        let value = e.target.value\n        this.setState(prevState => {\n            return { [name]: value }\n        })\n    }\n\n    handleOutput(vector) {\n        this.setState({ output: vector })\n    }\n\n    render() {\n        // this.sliders.forEach((item) => console.log(this.state[item.name]))\n\n        return (\n            <div className=\"App\">\n                <div className=\"App-header\">\n\n                    <form action=\"\">\n                        {this.sliders.map((item, idx) =>\n                            <Slider val={this.state[item.name]} config={item} key={idx} />)}\n\n                    </form>\n                </div>\n\n                <div className=\"main\">\n                    <ThreeDElement\n                        k0={this.state.k0}\n                        k1={this.state.k1}\n                        k2={this.state.k2}\n                        r1={this.state.r1}\n                        r2={this.state.r2}\n                        delta={this.state.delta}\n                        nops={this.state.nops}\n                        output={this.state.output} />\n\n                    <div id=\"nodes-container\">\n                        <Nodes handleOutput={this.handleOutput} />\n                    </div>\n\n                </div>\n\n                <div className=\"help-icon\">\n                    <img src={icon} alt=\"\" onClick={this.toggleHelp} />\n                </div>\n\n                {this.state.showHelp? <Help close={this.toggleHelp}/> : null}\n\n            </div>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App></App>\n\n  // </React.StrictMode>,\n  , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}