{"version":3,"sources":["Res/help-24px.svg","Res/moroccan-flower-dark.png","Components/ThreeDElement.js","presets.js","Components/Rete.js","Components/Nodes.js","Components/Help.js","Components/PresetCard.js","Components/Drawer.js","Components/App.js","serviceWorker.js","index.js"],"names":["module","exports","ThreeDElement","myRef","React","createRef","canvas","myScene","renderer","THREE","setSize","this","domElement","id","scene","camera","position","set","lookAt","controls","OrbitControls","add","createGeometry","generatePoints","render","animate","requestAnimationFrame","update","points","output","props","nopsHigh","nops","delta","Number","parseFloat","i","x","y","z","push","generatePointsByNodes","createLineGeometry","style","material","type","color","setRGB","r","g","b","createPositionalMaterial","lines","name","createMaterial","geometry","setFromPoints","line","length","setHSL","cube","Math","random","c","xMax","max","map","it","xMin","min","yMax","yMin","zMax","zMin","fShader","vertexShader","fragmentShader","uniforms","obj","getObjectByName","remove","createCanvas","current","appendChild","updateScene","ref","Component","presets","description","image","nodes","numSocket","Rete","Socket","vectorSocket","styleSocket","NumControl","emitter","key","node","readonly","defVal","step","component","initial","data","value","onChange","v","setValue","trigger","val","putData","Control","className","addEventListener","e","stopPropagation","target","FunctionControl","OutputComponent","handler","vInput","Input","styleInput","deltaInput","nopsInput","addControl","editor","addInput","inputs","outputs","vector","SphereComponent","out1","Output","inpRad","inpK","addOutput","rad","k","sphere","sin","cos","CubeComponent","pow","CustomComponent","fx","fy","fz","setColor","Function","isNaN","Error","error","custom","NumComponent","ctrl","num","AddComponent","inp1","inp2","out","sum","num1","num2","find","n","get","AnimateComponent","intervalId","progress","TIMER_INTERVAL","inp3","triProgress","PI","asin","unformatted","round","cb","bind","setInterval","AddFunctionsComponent","f1","f2","SolidColorComponent","inR","inG","inB","container","outputHandler","utils","a","components","NodeEditor","use","ConnectionPlugin","ReactRenderPlugin","AreaPlugin","ContextMenuPlugin","searchBar","delay","engine","Engine","forEach","register","fromJSON","on","abort","process","toJSON","clearInterval","view","resize","zoomAt","Nodes","saveNodes","loadNodes","then","console","log","prevProps","createEditor","handleOutput","onClick","Help","close","useStyles","makeStyles","root","maxWidth","boxShadow","margin","media","height","PresetCard","classes","Card","CardActionArea","CardContent","Typography","gutterBottom","variant","list","width","TemporaryDrawer","useState","top","left","bottom","right","state","setState","toggleDrawer","anchor","open","event","Fragment","Button","Drawer","onClose","role","onKeyDown","align","Divider","idx","App","showHelp","toggleHelp","handlePreset","drawerData","prev","src","icon","alt","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.e1281908.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/help-24px.60405f42.svg\";","module.exports = __webpack_public_path__ + \"static/media/moroccan-flower-dark.08250678.png\";","import * as THREE from 'three'\r\nimport React from 'react'\r\nimport '../Style/ThreeDElement.css'\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\n\r\nclass ThreeDElement extends React.Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.myRef = React.createRef();\r\n        this.canvas = null\r\n        this.myScene = null\r\n    }\r\n\r\n    createCanvas() {\r\n        var renderer = new THREE.WebGLRenderer();\r\n        renderer.setSize(500, 500, false);\r\n        this.canvas = renderer.domElement\r\n        this.canvas.id = \"3DC\"\r\n\r\n        var scene = new THREE.Scene();\r\n        var camera = new THREE.PerspectiveCamera(75, 1, 0.1, 1000);\r\n\r\n        camera.position.set(70, 70, 70);\r\n        camera.lookAt(0, 0, 0);\r\n\r\n        const controls = new OrbitControls(camera, renderer.domElement);\r\n\r\n        scene.add(this.createGeometry(this.generatePoints()))\r\n\r\n        renderer.render(scene, camera);\r\n\r\n        function animate() {\r\n            requestAnimationFrame(animate);\r\n\r\n            controls.update();\r\n            renderer.render(scene, camera);\r\n        }\r\n\r\n        animate()\r\n        return scene\r\n    }\r\n\r\n    // generatePointsOG() {\r\n    //     var points = [];\r\n\r\n    //     const r1 = this.props.r1\r\n    //     const r2 = this.props.r2\r\n\r\n    //     const k0 = this.props.k0\r\n    //     const k1 = this.props.k1\r\n\r\n    //     const k2 = this.props.k2\r\n\r\n    //     const nopsLow = 0\r\n    //     const nopsHigh = this.props.nops || 2000\r\n    //     const delta = .02;\r\n\r\n    //     for (let i = nopsLow * delta; i <= nopsHigh * delta; i += delta) {\r\n\r\n    //         const x1 = r1 * Math.sin(k0 * i) * Math.cos(k1 * i);\r\n    //         const y1 = r1 * Math.sin(k0 * i) * Math.sin(k1 * i);\r\n    //         const z1 = r1 * Math.cos(k0 * i) + i;\r\n    //         //z = i;\r\n\r\n    //         const x2 = r2 * Math.sin(k2 * i) * Math.cos(k2 * i);\r\n    //         const y2 = r2 * Math.sin(k2 * i) * Math.sin(k2 * i);\r\n    //         const z2 = r2 * Math.cos(k2 * i);\r\n\r\n    //         const x = x1 + x2\r\n    //         const y = y1 + y2\r\n    //         const z = z1 + z2\r\n\r\n    //         points.push(new THREE.Vector3(x, y, z));\r\n    //     }\r\n    //     return points\r\n    // }\r\n\r\n    generatePointsByNodes() {\r\n        var points = [];\r\n\r\n        const output = this.props.output\r\n\r\n        if (!output) return []\r\n\r\n        const nopsLow = 0.0\r\n        const nopsHigh = this.props.nops || 2000\r\n        let delta = Number.parseFloat(this.props.delta)\r\n\r\n        if (delta === 0 ) delta = 0.00001\r\n\r\n        for (let i = nopsLow * delta; i <= nopsHigh * delta; i += delta) {\r\n            const x = output['x'](i)\r\n            const y = output['y'](i)\r\n            const z = output['z'](i)\r\n\r\n            points.push(new THREE.Vector3(x, y, z));\r\n        }\r\n\r\n        // console.log(points)\r\n        return points\r\n    }\r\n\r\n    generatePoints() {\r\n        return this.generatePointsByNodes()\r\n\r\n    }\r\n\r\n\r\n    createGeometry(points) {\r\n        return this.createLineGeometry(points)\r\n        // return this.createCubesGeometry(points)\r\n    }\r\n\r\n    // createGeometryBySegments(points) {\r\n    //     const lines = new THREE.Object3D()\r\n    //     lines.name = \"Lines\"\r\n\r\n    //     const nops = points.length\r\n    //     let material = null\r\n\r\n    //     for (let i = 0; i < nops - 1; i++) {\r\n    //         const start = points[i]\r\n    //         const end = points[i + 1]\r\n\r\n    //         material = new THREE.LineBasicMaterial({});\r\n    //         material.color.setHSL(i / nops, 1, 0.5)\r\n\r\n    //         var geometry = new THREE.BufferGeometry().setFromPoints([start, end]);\r\n    //         var line = new THREE.Line(geometry, material);\r\n    //         lines.add(line);\r\n    //     }\r\n    //     return lines\r\n    // }\r\n\r\n    createMaterial(style, points) {\r\n        let material\r\n        if (style && style.type === 'solid') {\r\n            material = new THREE.LineBasicMaterial({})\r\n            material.color.setRGB(style.color.r / 255, style.color.g / 255, style.color.b / 255)\r\n        } else {\r\n            material = this.createPositionalMaterial(points)\r\n        }\r\n        return material\r\n    }\r\n\r\n    createLineGeometry(points) {\r\n        const lines = new THREE.Object3D()\r\n        lines.name = \"Lines\"\r\n\r\n        // const material = this.createPositionalMaterial(points)\r\n        const material = this.createMaterial(this.props.style, points)\r\n\r\n        var geometry = new THREE.BufferGeometry().setFromPoints(points);\r\n        var line = new THREE.Line(geometry, material);\r\n        lines.add(line);\r\n\r\n        return lines\r\n    }\r\n\r\n    createCubesGeometry(points) {\r\n        const lines = new THREE.Object3D()\r\n        lines.name = \"Lines\"\r\n\r\n        const nops = points.length\r\n\r\n\r\n        const geometry = new THREE.IcosahedronBufferGeometry(1)\r\n\r\n        for (let i = 0; i < nops - 1; i += 5) {\r\n            let material = new THREE.MeshBasicMaterial({});\r\n            material.color.setHSL(i / nops, 1, 0.5)\r\n            var cube = new THREE.Mesh(geometry, material);\r\n            cube.position.set(points[i].x + Math.random(), points[i].y, points[i].z)\r\n            lines.add(cube);\r\n        }\r\n        return lines\r\n    }\r\n\r\n    createPositionalMaterial(points) {\r\n\r\n        if (points.length > 0) {\r\n            const c = 0.0001 // Quick fix to avoid formating the numbers \r\n\r\n            const xMax = Math.max(...points.map(it => it.x)) + c\r\n            const xMin = Math.min(...points.map(it => it.x)) + c\r\n\r\n            const yMax = Math.max(...points.map(it => it.y)) + c\r\n            const yMin = Math.min(...points.map(it => it.y)) + c\r\n\r\n            const zMax = Math.max(...points.map(it => it.z)) + c\r\n            const zMin = Math.min(...points.map(it => it.z)) + c\r\n\r\n            const vShader = `\r\n                varying vec3 pos;\r\n    \r\n                void main() {\r\n                pos = position;\r\n                gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n                }\r\n                `\r\n            const fShader = `\r\n                varying vec3 pos;\r\n    \r\n                void main() {\r\n                gl_FragColor = vec4((0.2 + 0.8*(pos.x-(${xMin}))/((${xMax})-(${xMin}))),\r\n                                    (0.2 + 0.8*(pos.y-(${yMin}))/((${yMax})-(${yMin}))),\r\n                                    (0.2 + 0.8*(pos.z-(${zMin}))/((${zMax})-(${zMin}))),\r\n                                    1.0).rgba;\r\n                }\r\n                `\r\n\r\n            return new THREE.ShaderMaterial({\r\n                vertexShader: vShader,\r\n                fragmentShader: fShader,\r\n                uniforms: {}\r\n            });\r\n        }\r\n\r\n        return new THREE.LineBasicMaterial()\r\n\r\n    }\r\n\r\n    updateScene() {\r\n        const obj = this.myScene.getObjectByName(\"Lines\")\r\n        this.myScene.remove(obj)\r\n        this.myScene.add(this.createGeometry(this.generatePoints()))\r\n    }\r\n\r\n    componentDidMount() {\r\n        // console.log(\"Mount\")\r\n        this.myScene = this.createCanvas()\r\n        this.myRef.current.appendChild(this.canvas)\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        // console.log(\"Update\")\r\n        this.updateScene(this.myScene)\r\n    }\r\n\r\n    render() {\r\n\r\n        // return container\r\n        return (\r\n            <div id=\"canvas-container\" ref={this.myRef}></div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default ThreeDElement\r\n\r\n\r\n\r\n","let presets = [\r\n    {\r\n        name: 'Custom Function Example',\r\n        description: 'Example of usage of the custom node',\r\n        image: null,\r\n        nodes: {\r\n            \"id\": \"Spiro@0.1.0\",\r\n            \"nodes\": {\r\n                \"1\": {\r\n                    \"id\": 1,\r\n                    \"data\": {\r\n                        \"delta\": 0.181,\r\n                        \"nops\": 1300\r\n                    },\r\n                    \"inputs\": {\r\n                        \"v3\": {\r\n                            \"connections\": [\r\n                                {\r\n                                    \"node\": 4,\r\n                                    \"output\": \"out\",\r\n                                    \"data\": {}\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"style\": {\r\n                            \"connections\": []\r\n                        },\r\n                        \"delta\": {\r\n                            \"connections\": []\r\n                        },\r\n                        \"nops\": {\r\n                            \"connections\": []\r\n                        }\r\n                    },\r\n                    \"outputs\": {},\r\n                    \"position\": [\r\n                        541.6740955561721,\r\n                        -76.60715807547544\r\n                    ],\r\n                    \"name\": \"Output\"\r\n                },\r\n                \"2\": {\r\n                    \"id\": 2,\r\n                    \"data\": {\r\n                        \"rad\": 50,\r\n                        \"k\": 5\r\n                    },\r\n                    \"inputs\": {\r\n                        \"rad\": {\r\n                            \"connections\": []\r\n                        },\r\n                        \"k\": {\r\n                            \"connections\": []\r\n                        }\r\n                    },\r\n                    \"outputs\": {\r\n                        \"v3\": {\r\n                            \"connections\": [\r\n                                {\r\n                                    \"node\": 4,\r\n                                    \"input\": \"f1\",\r\n                                    \"data\": {}\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    \"position\": [\r\n                        20,\r\n                        0\r\n                    ],\r\n                    \"name\": \"Sphere\"\r\n                },\r\n                \"4\": {\r\n                    \"id\": 4,\r\n                    \"data\": {},\r\n                    \"inputs\": {\r\n                        \"f1\": {\r\n                            \"connections\": [\r\n                                {\r\n                                    \"node\": 2,\r\n                                    \"output\": \"v3\",\r\n                                    \"data\": {}\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"f2\": {\r\n                            \"connections\": [\r\n                                {\r\n                                    \"node\": 5,\r\n                                    \"output\": \"v3\",\r\n                                    \"data\": {}\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    \"outputs\": {\r\n                        \"out\": {\r\n                            \"connections\": [\r\n                                {\r\n                                    \"node\": 1,\r\n                                    \"input\": \"v3\",\r\n                                    \"data\": {}\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    \"position\": [\r\n                        300,\r\n                        100\r\n                    ],\r\n                    \"name\": \"Add Functions\"\r\n                },\r\n                \"5\": {\r\n                    \"id\": 5,\r\n                    \"data\": {\r\n                        \"fx\": \"0\",\r\n                        \"fy\": \"50*Math.abs(Math.cos(i))\",\r\n                        \"fz\": \"0\"\r\n                    },\r\n                    \"inputs\": {},\r\n                    \"outputs\": {\r\n                        \"v3\": {\r\n                            \"connections\": [\r\n                                {\r\n                                    \"node\": 4,\r\n                                    \"input\": \"f2\",\r\n                                    \"data\": {}\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    \"position\": [\r\n                        20,\r\n                        200\r\n                    ],\r\n                    \"name\": \"Custom\"\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {\r\n        name: 'Cube and Sphere Example',\r\n        description: 'Example of usage of the \"add Funtion\" node',\r\n        image: null,\r\n        nodes: {\r\n            \"id\": \"Spiro@0.1.0\",\r\n            \"nodes\": {\r\n                \"1\": {\r\n                    \"id\": 1,\r\n                    \"data\": {\r\n                        \"delta\": 0.005,\r\n                        \"nops\": 2000\r\n                    },\r\n                    \"inputs\": {\r\n                        \"v3\": {\r\n                            \"connections\": [\r\n                                {\r\n                                    \"node\": 4,\r\n                                    \"output\": \"out\",\r\n                                    \"data\": {}\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"style\": {\r\n                            \"connections\": []\r\n                        },\r\n                        \"delta\": {\r\n                            \"connections\": []\r\n                        },\r\n                        \"nops\": {\r\n                            \"connections\": []\r\n                        }\r\n                    },\r\n                    \"outputs\": {},\r\n                    \"position\": [\r\n                        541.6740955561721,\r\n                        -76.60715807547544\r\n                    ],\r\n                    \"name\": \"Output\"\r\n                },\r\n                \"2\": {\r\n                    \"id\": 2,\r\n                    \"data\": {\r\n                        \"rad\": 50,\r\n                        \"k\": 3\r\n                    },\r\n                    \"inputs\": {\r\n                        \"rad\": {\r\n                            \"connections\": []\r\n                        },\r\n                        \"k\": {\r\n                            \"connections\": []\r\n                        }\r\n                    },\r\n                    \"outputs\": {\r\n                        \"v3\": {\r\n                            \"connections\": [\r\n                                {\r\n                                    \"node\": 4,\r\n                                    \"input\": \"f2\",\r\n                                    \"data\": {}\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    \"position\": [\r\n                        -91.44518513573216,\r\n                        95.23739691728599\r\n                    ],\r\n                    \"name\": \"Sphere\"\r\n                },\r\n                \"4\": {\r\n                    \"id\": 4,\r\n                    \"data\": {},\r\n                    \"inputs\": {\r\n                        \"f1\": {\r\n                            \"connections\": [\r\n                                {\r\n                                    \"node\": 6,\r\n                                    \"output\": \"v3\",\r\n                                    \"data\": {}\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"f2\": {\r\n                            \"connections\": [\r\n                                {\r\n                                    \"node\": 2,\r\n                                    \"output\": \"v3\",\r\n                                    \"data\": {}\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    \"outputs\": {\r\n                        \"out\": {\r\n                            \"connections\": [\r\n                                {\r\n                                    \"node\": 1,\r\n                                    \"input\": \"v3\",\r\n                                    \"data\": {}\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    \"position\": [\r\n                        289,\r\n                        37\r\n                    ],\r\n                    \"name\": \"Add Functions\"\r\n                },\r\n                \"6\": {\r\n                    \"id\": 6,\r\n                    \"data\": {\r\n                        \"rad\": 50,\r\n                        \"k\": 15\r\n                    },\r\n                    \"inputs\": {\r\n                        \"rad\": {\r\n                            \"connections\": []\r\n                        },\r\n                        \"k\": {\r\n                            \"connections\": []\r\n                        }\r\n                    },\r\n                    \"outputs\": {\r\n                        \"v3\": {\r\n                            \"connections\": [\r\n                                {\r\n                                    \"node\": 4,\r\n                                    \"input\": \"f1\",\r\n                                    \"data\": {}\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    \"position\": [\r\n                        -88.99797304770017,\r\n                        -128.9273926968552\r\n                    ],\r\n                    \"name\": \"Cube\"\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {\r\n        name: 'Animation Example',\r\n        description: 'Example of usage of the animation node',\r\n        image: null,\r\n        nodes: {\r\n            \"id\": \"Spiro@0.1.0\",\r\n            \"nodes\": {\r\n                \"1\": {\r\n                    \"id\": 1,\r\n                    \"data\": {\r\n                        \"delta\": 0.052,\r\n                        \"nops\": 2000\r\n                    },\r\n                    \"inputs\": {\r\n                        \"v3\": {\r\n                            \"connections\": [\r\n                                {\r\n                                    \"node\": 4,\r\n                                    \"output\": \"out\",\r\n                                    \"data\": {}\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"style\": {\r\n                            \"connections\": []\r\n                        },\r\n                        \"delta\": {\r\n                            \"connections\": []\r\n                        },\r\n                        \"nops\": {\r\n                            \"connections\": []\r\n                        }\r\n                    },\r\n                    \"outputs\": {},\r\n                    \"position\": [\r\n                        604.6370269540441,\r\n                        44.38057587316632\r\n                    ],\r\n                    \"name\": \"Output\"\r\n                },\r\n                \"2\": {\r\n                    \"id\": 2,\r\n                    \"data\": {\r\n                        \"rad\": 50,\r\n                        \"k\": 3\r\n                    },\r\n                    \"inputs\": {\r\n                        \"rad\": {\r\n                            \"connections\": []\r\n                        },\r\n                        \"k\": {\r\n                            \"connections\": [\r\n                                {\r\n                                    \"node\": 10,\r\n                                    \"output\": \"num\",\r\n                                    \"data\": {}\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    \"outputs\": {\r\n                        \"v3\": {\r\n                            \"connections\": [\r\n                                {\r\n                                    \"node\": 4,\r\n                                    \"input\": \"f2\",\r\n                                    \"data\": {}\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    \"position\": [\r\n                        22.13491744360499,\r\n                        295.23736549885757\r\n                    ],\r\n                    \"name\": \"Sphere\"\r\n                },\r\n                \"4\": {\r\n                    \"id\": 4,\r\n                    \"data\": {},\r\n                    \"inputs\": {\r\n                        \"f1\": {\r\n                            \"connections\": [\r\n                                {\r\n                                    \"node\": 6,\r\n                                    \"output\": \"v3\",\r\n                                    \"data\": {}\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"f2\": {\r\n                            \"connections\": [\r\n                                {\r\n                                    \"node\": 2,\r\n                                    \"output\": \"v3\",\r\n                                    \"data\": {}\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    \"outputs\": {\r\n                        \"out\": {\r\n                            \"connections\": [\r\n                                {\r\n                                    \"node\": 1,\r\n                                    \"input\": \"v3\",\r\n                                    \"data\": {}\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    \"position\": [\r\n                        296.4074054659704,\r\n                        71.56789217452838\r\n                    ],\r\n                    \"name\": \"Add Functions\"\r\n                },\r\n                \"6\": {\r\n                    \"id\": 6,\r\n                    \"data\": {\r\n                        \"rad\": 50,\r\n                        \"k\": 15\r\n                    },\r\n                    \"inputs\": {\r\n                        \"rad\": {\r\n                            \"connections\": []\r\n                        },\r\n                        \"k\": {\r\n                            \"connections\": [\r\n                                {\r\n                                    \"node\": 10,\r\n                                    \"output\": \"num\",\r\n                                    \"data\": {}\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    \"outputs\": {\r\n                        \"v3\": {\r\n                            \"connections\": [\r\n                                {\r\n                                    \"node\": 4,\r\n                                    \"input\": \"f1\",\r\n                                    \"data\": {}\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    \"position\": [\r\n                        43.100749234448976,\r\n                        -146.21133766835135\r\n                    ],\r\n                    \"name\": \"Cube\"\r\n                },\r\n                \"10\": {\r\n                    \"id\": 10,\r\n                    \"data\": {\r\n                        \"min\": -1,\r\n                        \"max\": 1,\r\n                        \"delta\": 200,\r\n                        \"preview\": 0.6125\r\n                    },\r\n                    \"inputs\": {\r\n                        \"min\": {\r\n                            \"connections\": []\r\n                        },\r\n                        \"max\": {\r\n                            \"connections\": []\r\n                        },\r\n                        \"delta\": {\r\n                            \"connections\": []\r\n                        }\r\n                    },\r\n                    \"outputs\": {\r\n                        \"num\": {\r\n                            \"connections\": [\r\n                                {\r\n                                    \"node\": 2,\r\n                                    \"input\": \"k\",\r\n                                    \"data\": {}\r\n                                },\r\n                                {\r\n                                    \"node\": 6,\r\n                                    \"input\": \"k\",\r\n                                    \"data\": {}\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    \"position\": [\r\n                        -258.0703390719412,\r\n                        102.13471262448921\r\n                    ],\r\n                    \"name\": \"Animate\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n]\r\n\r\nexport default presets\r\n\r\n","import Rete from 'rete'\r\nimport React from 'react'\r\n\r\nimport ConnectionPlugin from 'rete-connection-plugin'\r\nimport ReactRenderPlugin from 'rete-react-render-plugin'\r\nimport AreaPlugin from 'rete-area-plugin'\r\nimport ContextMenuPlugin from 'rete-context-menu-plugin';\r\nimport presets from '../presets'\r\n\r\nconst numSocket = new Rete.Socket(\"Number value\");\r\nconst vectorSocket = new Rete.Socket(\"Vector value\")\r\nconst styleSocket = new Rete.Socket(\"Style value\")\r\n\r\nclass NumControl extends Rete.Control {\r\n\r\n    static component = ({ value, onChange, step }) => (\r\n        <div className=\"\">\r\n            <input\r\n                type=\"number\"\r\n                value={value}\r\n                step={step}\r\n                ref={ref => {\r\n                    ref && ref.addEventListener(\"pointerdown\", e => e.stopPropagation());\r\n                }}\r\n                onChange={e => onChange(+e.target.value)}\r\n            />\r\n        </div>\r\n\r\n    );\r\n\r\n    constructor(emitter, key, node, readonly = false, defVal = 1, step = 0.1) {\r\n        super(key);\r\n        this.emitter = emitter;\r\n        this.key = key;\r\n        this.component = NumControl.component;\r\n\r\n        const initial = node.data[key] || defVal;\r\n\r\n        node.data[key] = initial;\r\n        this.props = {\r\n            step: step,\r\n            readonly,\r\n            value: initial,\r\n            onChange: v => {\r\n                this.setValue(v);\r\n                this.emitter.trigger(\"process\");\r\n            }\r\n        };\r\n    }\r\n\r\n    setValue(val) {\r\n        this.props.value = val;\r\n        this.putData(this.key, val);\r\n        this.update();\r\n    }\r\n}\r\n\r\nclass FunctionControl extends Rete.Control {\r\n\r\n    static component = ({ value, onChange, color }) => (\r\n        <div className=\"\" >\r\n            <input style={{ 'color': color }}\r\n                type=\"text\"\r\n                value={value}\r\n                ref={ref => {\r\n                    ref && ref.addEventListener(\"pointerdown\", e => e.stopPropagation());\r\n                }}\r\n                onChange={e => onChange(e.target.value)}\r\n            />\r\n        </div>\r\n\r\n    );\r\n\r\n    constructor(emitter, key, node, readonly = false) {\r\n        super(key);\r\n        this.emitter = emitter;\r\n        this.key = key;\r\n        this.component = FunctionControl.component;\r\n\r\n        const initial = node.data[key] || \"5*i\";\r\n\r\n        node.data[key] = initial;\r\n        this.props = {\r\n            color: 'black',\r\n            readonly,\r\n            value: initial,\r\n            onChange: v => {\r\n                this.setValue(v);\r\n                this.emitter.trigger(\"process\");\r\n            }\r\n        };\r\n    }\r\n\r\n    setValue(val) {\r\n        this.props.value = val;\r\n        this.putData(this.key, val);\r\n        this.update();\r\n    }\r\n\r\n    setColor(color) {\r\n        this.props.color = color\r\n        this.update()\r\n    }\r\n}\r\n\r\nclass OutputComponent extends Rete.Component {\r\n    constructor(handler) {\r\n        super(\"Output\")\r\n        this.handler = handler\r\n    }\r\n\r\n    builder(node) {\r\n        var vInput = new Rete.Input(\"v3\", \"Vector\", vectorSocket)\r\n        var styleInput = new Rete.Input(\"style\", \"Style\", styleSocket)\r\n        const deltaInput = new Rete.Input(\"delta\", \"Delta\", numSocket)\r\n        const nopsInput = new Rete.Input(\"nops\", \"Point Number\", numSocket)\r\n\r\n        deltaInput.addControl(new NumControl(this.editor, \"delta\", node, false, 0.005, 0.001))\r\n        nopsInput.addControl(new NumControl(this.editor, \"nops\", node, false, 2000, 50))\r\n\r\n\r\n        return node\r\n            .addInput(vInput)\r\n            .addInput(styleInput)\r\n            .addInput(deltaInput)\r\n            .addInput(nopsInput)\r\n    }\r\n\r\n    worker(node, inputs, outputs) {\r\n\r\n        const vector = inputs['v3'][0]\r\n        const style = inputs['style'][0]\r\n        const delta = inputs[\"delta\"].length ? inputs[\"delta\"][0] : node.data.delta\r\n        const nops = inputs[\"nops\"].length ? inputs[\"nops\"][0] : node.data.nops\r\n        this.handler(vector, style, delta, nops)\r\n    }\r\n}\r\n\r\nclass SphereComponent extends Rete.Component {\r\n    constructor() {\r\n        super(\"Sphere\");\r\n    }\r\n\r\n    builder(node) {\r\n        const out1 = new Rete.Output(\"v3\", \"Vector\", vectorSocket);\r\n        const inpRad = new Rete.Input(\"rad\", \"Radius\", numSocket)\r\n        const inpK = new Rete.Input(\"k\", \"K\", numSocket)\r\n\r\n        inpRad.addControl(new NumControl(this.editor, \"rad\", node, false, 50, 1))\r\n        inpK.addControl(new NumControl(this.editor, \"k\", node))\r\n\r\n        return node\r\n            .addOutput(out1)\r\n            .addInput(inpRad)\r\n            .addInput(inpK)\r\n    }\r\n\r\n    worker(node, inputs, outputs) {\r\n        const r = inputs[\"rad\"].length ? inputs[\"rad\"][0] : node.data.rad\r\n        const k = inputs[\"k\"].length ? inputs[\"k\"][0] : node.data.k\r\n        const sphere = {\r\n            x: function (i) { return r * Math.sin(k * i) * Math.cos(i) },\r\n            y: function (i) { return r * Math.sin(k * i) * Math.sin(i) },\r\n            z: function (i) { return r * Math.cos(k * i) }\r\n        }\r\n\r\n        outputs[\"v3\"] = sphere\r\n    }\r\n}\r\n\r\nclass CubeComponent extends Rete.Component {\r\n    constructor() {\r\n        super(\"Cube\");\r\n    }\r\n\r\n    builder(node) {\r\n        const out1 = new Rete.Output(\"v3\", \"Vector\", vectorSocket);\r\n        const inpRad = new Rete.Input(\"rad\", \"Radius\", numSocket)\r\n        const inpK = new Rete.Input(\"k\", \"K\", numSocket)\r\n\r\n        inpRad.addControl(new NumControl(this.editor, \"rad\", node))\r\n        inpK.addControl(new NumControl(this.editor, \"k\", node))\r\n\r\n        return node\r\n            .addOutput(out1)\r\n            .addInput(inpRad)\r\n            .addInput(inpK)\r\n    }\r\n\r\n    worker(node, inputs, outputs) {\r\n        const r = inputs[\"rad\"].length ? inputs[\"rad\"][0] : node.data.rad\r\n        const k = inputs[\"k\"].length ? inputs[\"k\"][0] : node.data.k\r\n        const cube = {\r\n            x: function (i) { return r * Math.sin(i) * Math.cos(k * i) / Math.pow(Math.pow(Math.sin(i), 6) * (Math.pow(Math.sin(k * i), 6) + Math.pow(Math.cos(k * i), 6)) + Math.pow(Math.cos(i), 6), 1 / 6); },\r\n            y: function (i) { return r * Math.sin(i) * Math.sin(k * i) / Math.pow(Math.pow(Math.sin(i), 6) * (Math.pow(Math.sin(k * i), 6) + Math.pow(Math.cos(k * i), 6)) + Math.pow(Math.cos(i), 6), 1 / 6); },\r\n            z: function (i) { return r * Math.cos(i) / Math.pow(Math.pow(Math.sin(i), 6) * (Math.pow(Math.sin(k * i), 6) + Math.pow(Math.cos(k * i), 6)) + Math.pow(Math.cos(i), 6), 1 / 6); }\r\n        }\r\n\r\n        outputs[\"v3\"] = cube\r\n    }\r\n}\r\n\r\nclass CustomComponent extends Rete.Component {\r\n    constructor() {\r\n        super(\"Custom\");\r\n\r\n    }\r\n\r\n    builder(node) {\r\n        var out1 = new Rete.Output(\"v3\", \"Vector\", vectorSocket);\r\n        this.controls = {\r\n            fx: new FunctionControl(this.editor, \"fx\", node),\r\n            fy: new FunctionControl(this.editor, \"fy\", node),\r\n            fz: new FunctionControl(this.editor, \"fz\", node)\r\n        }\r\n\r\n        return node\r\n            .addControl(this.controls.fx)\r\n            .addControl(this.controls.fy)\r\n            .addControl(this.controls.fz)\r\n            .addOutput(out1);\r\n    }\r\n\r\n    worker(node, inputs, outputs) {\r\n        let fx\r\n        let fy\r\n        let fz\r\n\r\n        this.controls.fx.setColor('black')\r\n        this.controls.fy.setColor('black')\r\n        this.controls.fz.setColor('black')\r\n\r\n        try {\r\n            fx = new Function(\"i\", \"return \" + node.data.fx)\r\n            fy = new Function(\"i\", \"return \" + node.data.fy)\r\n            fz = new Function(\"i\", \"return \" + node.data.fz)\r\n\r\n            if (isNaN(fx(0.5))) throw new Error('fx error')\r\n            if (isNaN(fy(0.5))) throw new Error('fy error')\r\n            if (isNaN(fz(0.5))) throw new Error('fz error')\r\n\r\n        } catch (error) {\r\n            fx = function (i) { return 0 }\r\n            fy = function (i) { return 0 }\r\n            fz = function (i) { return 0 }\r\n            this.controls.fx.setColor('red')\r\n            this.controls.fy.setColor('red')\r\n            this.controls.fz.setColor('red')\r\n\r\n        }\r\n\r\n        const custom = {\r\n            x: fx,\r\n            y: fy,\r\n            z: fz,\r\n        }\r\n\r\n        outputs[\"v3\"] = custom\r\n    }\r\n}\r\n\r\nclass NumComponent extends Rete.Component {\r\n    constructor() {\r\n        super(\"Number\");\r\n    }\r\n\r\n    builder(node) {\r\n        var out1 = new Rete.Output(\"num\", \"Number\", numSocket);\r\n        var ctrl = new NumControl(this.editor, \"num\", node);\r\n\r\n        return node.addControl(ctrl).addOutput(out1);\r\n    }\r\n\r\n    worker(node, inputs, outputs) {\r\n        outputs[\"num\"] = node.data.num;\r\n    }\r\n}\r\n\r\nclass AddComponent extends Rete.Component {\r\n    constructor() {\r\n        super(\"Add\");\r\n    }\r\n\r\n    builder(node) {\r\n        var inp1 = new Rete.Input(\"num1\", \"Number\", numSocket);\r\n        var inp2 = new Rete.Input(\"num2\", \"Number2\", numSocket);\r\n        var out = new Rete.Output(\"num\", \"Number\", numSocket);\r\n\r\n        inp1.addControl(new NumControl(this.editor, \"num1\", node));\r\n        inp2.addControl(new NumControl(this.editor, \"num2\", node));\r\n\r\n        return node\r\n            .addInput(inp1)\r\n            .addInput(inp2)\r\n            .addControl(new NumControl(this.editor, \"preview\", node, true))\r\n            .addOutput(out);\r\n    }\r\n\r\n    worker(node, inputs, outputs) {\r\n        var n1 = inputs[\"num1\"].length ? inputs[\"num1\"][0] : node.data.num1;\r\n        var n2 = inputs[\"num2\"].length ? inputs[\"num2\"][0] : node.data.num2;\r\n        var sum = n1 + n2;\r\n\r\n        this.editor.nodes\r\n            .find(n => n.id === node.id)\r\n            .controls.get(\"preview\")\r\n            .setValue(sum);\r\n        outputs[\"num\"] = sum;\r\n    }\r\n}\r\n\r\nclass AnimateComponent extends Rete.Component {\r\n\r\n    constructor() {\r\n        super(\"Animate\");\r\n        this.intervalId = null\r\n        this.progress = 0\r\n        this.TIMER_INTERVAL = 50\r\n    }\r\n\r\n    builder(node) {\r\n        var inp1 = new Rete.Input(\"min\", \"Min\", numSocket);\r\n        var inp2 = new Rete.Input(\"max\", \"Max\", numSocket);\r\n        var inp3 = new Rete.Input(\"delta\", \"Delta T\", numSocket)\r\n        var out = new Rete.Output(\"num\", \"Number\", numSocket);\r\n\r\n        inp1.addControl(new NumControl(this.editor, \"min\", node));\r\n        inp2.addControl(new NumControl(this.editor, \"max\", node));\r\n        inp3.addControl(new NumControl(this.editor, \"delta\", node));\r\n\r\n\r\n        return node\r\n            .addInput(inp1)\r\n            .addInput(inp2)\r\n            .addInput(inp3)\r\n            .addControl(new NumControl(this.editor, \"preview\", node, true))\r\n            .addOutput(out);\r\n    }\r\n\r\n    worker(node, inputs, outputs) {\r\n        this.min = inputs[\"min\"].length ? inputs[\"min\"][0] : node.data.min;\r\n        this.max = inputs[\"max\"].length ? inputs[\"max\"][0] : node.data.max;\r\n        this.delta = inputs[\"delta\"].length ? inputs[\"delta\"][0] : node.data.delta;\r\n\r\n        // let sinProgress = Math.sin(this.progress) / 2 + 0.5\r\n        let b = this.delta\r\n        let x = this.progress / (1000 / this.TIMER_INTERVAL)\r\n        let triProgress = 0.5 + 1 / Math.PI * Math.asin(Math.sin(2 / b * Math.PI * (0.5 * x - b / 4)))\r\n\r\n        let unformatted = this.min + triProgress * (this.max - this.min)\r\n        this.num = Math.round(unformatted * 100000) / 100000\r\n\r\n        let cb = function () {\r\n            this.progress += 1\r\n            this.editor.trigger(\"process\")\r\n        }\r\n\r\n        this.cb = cb.bind(this)\r\n\r\n        if (!this.intervalId) this.intervalId = setInterval(this.cb, this.TIMER_INTERVAL)\r\n\r\n        this.editor.nodes\r\n            .find(n => n.id === node.id)\r\n            .controls.get(\"preview\")\r\n            .setValue(this.num);\r\n        outputs[\"num\"] = this.num;\r\n    }\r\n}\r\n\r\nclass AddFunctionsComponent extends Rete.Component {\r\n    constructor() {\r\n        super(\"Add Functions\");\r\n    }\r\n\r\n    builder(node) {\r\n        var f1 = new Rete.Input(\"f1\", \"F1\", vectorSocket);\r\n        var f2 = new Rete.Input(\"f2\", \"F2\", vectorSocket);\r\n        var out = new Rete.Output(\"out\", \"Result\", vectorSocket);\r\n\r\n\r\n        return node\r\n            .addInput(f1)\r\n            .addInput(f2)\r\n            .addOutput(out);\r\n    }\r\n\r\n    worker(node, inputs, outputs) {\r\n        var f1 = inputs[\"f1\"].length ? inputs[\"f1\"][0] : node.data.f1; // {x: f, y: f, z:f}\r\n        var f2 = inputs[\"f2\"].length ? inputs[\"f2\"][0] : node.data.f2;\r\n\r\n        let g\r\n\r\n        if (f1 && !f2) g = f1\r\n        if (f2 && !f1) g = f2\r\n        if (f1 && f2) {\r\n            g = {\r\n                x: function (i) { return f1.x(i) + f2.x(i) },\r\n                y: function (i) { return f1.y(i) + f2.y(i) },\r\n                z: function (i) { return f1.z(i) + f2.z(i) },\r\n            }\r\n        }\r\n\r\n        outputs[\"out\"] = g;\r\n    }\r\n}\r\n\r\nclass SolidColorComponent extends Rete.Component {\r\n    constructor() {\r\n        super(\"Solid Color\");\r\n    }\r\n\r\n    builder(node) {\r\n        var out1 = new Rete.Output(\"style\", \"Style\", styleSocket);\r\n\r\n        const inR = new Rete.Input(\"r\", \"Red\", numSocket)\r\n        inR.addControl(new NumControl(this.editor, \"r\", node))\r\n\r\n        const inG = new Rete.Input(\"g\", \"Green\", numSocket)\r\n        inG.addControl(new NumControl(this.editor, \"g\", node))\r\n\r\n        const inB = new Rete.Input(\"b\", \"Blue\", numSocket)\r\n        inB.addControl(new NumControl(this.editor, \"b\", node))\r\n\r\n\r\n        return node\r\n            .addInput(inR)\r\n            .addInput(inG)\r\n            .addInput(inB)\r\n            .addOutput(out1);\r\n    }\r\n\r\n    worker(node, inputs, outputs) {\r\n        const r = inputs[\"r\"].length ? inputs[\"r\"][0] : node.data.r\r\n        const g = inputs[\"g\"].length ? inputs[\"g\"][0] : node.data.g\r\n        const b = inputs[\"b\"].length ? inputs[\"b\"][0] : node.data.b\r\n\r\n        outputs[\"style\"] = {\r\n            type: 'solid',\r\n            color: { type: 'RGB', r, g, b }\r\n        }\r\n    }\r\n}\r\n\r\nexport async function createEditor(container, outputHandler, utils) {\r\n\r\n    var components = [\r\n        new NumComponent(),\r\n        new AddComponent(),\r\n        new OutputComponent(outputHandler),\r\n        new SphereComponent(),\r\n        new CubeComponent(),\r\n        new AddFunctionsComponent(),\r\n        new CustomComponent(),\r\n        new AnimateComponent(),\r\n        new SolidColorComponent()];\r\n\r\n    var editor = new Rete.NodeEditor(\"Spiro@0.1.0\", container);\r\n    editor.use(ConnectionPlugin);\r\n    editor.use(ReactRenderPlugin);\r\n    editor.use(AreaPlugin)\r\n\r\n    editor.use(ContextMenuPlugin, {\r\n        searchBar: false,\r\n        delay: 100,\r\n    });\r\n\r\n    var engine = new Rete.Engine(\"Spiro@0.1.0\");\r\n\r\n    components.forEach(c => { //TODO: ForEach \r\n        editor.register(c);\r\n        engine.register(c);\r\n    });\r\n\r\n    await editor.fromJSON(presets[0].nodes);\r\n\r\n    editor.on(\r\n        \"process nodecreated noderemoved connectioncreated connectionremoved\",\r\n        async () => {\r\n            await engine.abort();\r\n            await engine.process(editor.toJSON());\r\n        }\r\n\r\n    );\r\n\r\n    editor.on(\"noderemove\", node => {\r\n        if (node.name === \"Animate\") { clearInterval(node.intervalId) }\r\n    })\r\n\r\n    editor.trigger(\"process\");\r\n    editor.view.resize();\r\n    AreaPlugin.zoomAt(editor, editor.nodes);\r\n    return editor\r\n}","import React from 'react'\r\nimport { createEditor } from './Rete'\r\nimport '../Style/Nodes.css'\r\n\r\nclass Nodes extends React.Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.myRef = React.createRef();\r\n\r\n        this.saveNodes = this.saveNodes.bind(this)\r\n        this.loadNodes = this.loadNodes.bind(this)\r\n    }\r\n\r\n    saveNodes() {\r\n        this.editor.then(it => console.log(it.toJSON()))\r\n    }\r\n\r\n    loadNodes(nodes) {\r\n        this.editor.then(it => it.fromJSON(nodes))\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if (prevProps.nodes === this.props.nodes){\r\n            console.log('No change in nodes')\r\n        } else {\r\n            console.log('Change in nodes, loading new preset...')\r\n            this.loadNodes(this.props.nodes)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.editor = createEditor(this.myRef.current, this.props.handleOutput)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"nodes\" ref={this.myRef}>\r\n\r\n                <button onClick={this.saveNodes}>Save</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Nodes","import React from 'react'\r\nimport '../Style/Help.css'\r\n\r\nclass Help extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"help-container\" onClick={this.props.close}> \r\n                <h1>Spiro v0.1</h1>\r\n                <p>This demo app was created by Juan Manuel Scasso</p>\r\n                <h2>Usage tips</h2>\r\n                <ul>\r\n                    <li>Right click on the node area to add nodes</li>\r\n                    <li>Right click on a node to delete or clone</li>\r\n                    <li>Zoom, pan and rotate the 3D image with the mouse wheel and buttons</li>\r\n                    <li>Zoom and pan the node editor in a similar way</li>\r\n                    <li>In case of bad performance decrease the number of points and increment delta (if you want to cover more range)</li>\r\n                    <li>Custom functions must use 'i' as parameter, and you can input standard Math.*</li>\r\n                    <li>This is just a technical demo, it may contain catastrophic bugs</li>\r\n                </ul>\r\n\r\n                <h2>Libraries</h2>\r\n                <ul>\r\n                    <li>THREE.js</li>\r\n                    <li>Rete.js</li>\r\n                    <li>React</li>\r\n                </ul>\r\n                <p>I'm looking for work as Full Stack or Android developer, if interested hit me up at jmscasso (gmail) </p>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Help","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 300,\r\n        boxShadow: 'inset 0px 0px 5px 1px rgba(0,0,0,0.6)',\r\n        margin: 5\r\n    },\r\n    media: {\r\n        height: 20,\r\n    },\r\n});\r\n\r\nexport default function PresetCard(props) {\r\n    const classes = useStyles();\r\n\r\n    const handleClick = function(){\r\n        props.handler(props.data.nodes)\r\n    }            \r\n\r\n    return (\r\n        <Card className={classes.root} onClick={handleClick}>\r\n            <CardActionArea>\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                        {props.data.name}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {props.data.description}\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PresetCard from './PresetCard'\r\n\r\nconst useStyles = makeStyles({\r\n    list: {\r\n        width: 300,\r\n    }\r\n});\r\n\r\n\r\nexport default function TemporaryDrawer(props) {\r\n    const classes = useStyles()\r\n\r\n    const [state, setState] = React.useState({\r\n        top: false,\r\n        left: false,\r\n        bottom: false,\r\n        right: false\r\n    });\r\n\r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n        if (\r\n            event.type === \"keydown\" &&\r\n            (event.key === \"Tab\" || event.key === \"Shift\")\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        setState({ ...state, [anchor]: open });\r\n    };\r\n\r\n    const list = (anchor) => (\r\n        <div\r\n            className={classes.list}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(anchor, false)}\r\n            onKeyDown={toggleDrawer(anchor, false)}\r\n        >\r\n            \r\n            <Typography gutterBottom align='center' variant=\"h6\" component=\"h2\">\r\n                <br/> Presets\r\n            </Typography>\r\n            <Divider />\r\n\r\n            {props.data.presets.map((it, idx) => <PresetCard data={it} key={idx} handler={props.data.handler} />)}\r\n\r\n        </div>\r\n    );\r\n\r\n    let anchor = 'left'\r\n    return (\r\n\r\n        <React.Fragment>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={toggleDrawer(anchor, true)}>Presets</Button>\r\n            <Drawer\r\n                anchor={anchor}\r\n                open={state[anchor]}\r\n                onClose={toggleDrawer(anchor, false)}\r\n            >\r\n                {list(anchor)}\r\n            </Drawer>\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n","import React from 'react';\nimport '../Style/App.css';\nimport ThreeDElement from './ThreeDElement'\nimport Nodes from './Nodes'\nimport Help from './Help'\nimport Drawer from './Drawer'\nimport icon from '../Res/help-24px.svg'\n\nimport presets from '../presets'\n\nimport otherImage from '../Res/moroccan-flower-dark.png'\n\nimport { Button } from '@material-ui/core'\n\nclass App extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            output: null,\n            style: null,\n            showHelp: false,\n            nodes: null\n        }\n\n        this.handleOutput = this.handleOutput.bind(this)\n        this.toggleHelp = this.toggleHelp.bind(this)\n        this.handlePreset = this.handlePreset.bind(this) \n\n        this.drawerData = {\n            presets,\n            handler: this.handlePreset\n        }\n\n    }\n\n    handlePreset(nodes) {\n        this.setState({ nodes: nodes })\n    }\n\n    toggleHelp() {\n        this.setState(prev => ({ showHelp: !prev.showHelp }))\n    }\n\n\n    handleOutput(vector, style, delta, nops) {\n        this.setState({ output: vector, style, delta, nops })\n    }\n\n    render() {\n\n        return (\n            <div className=\"App\">\n\n\n                <div className=\"main\">\n                    <ThreeDElement\n                        delta={this.state.delta}\n                        nops={this.state.nops}\n                        output={this.state.output}\n                        style={this.state.style} />\n\n                    <div id=\"nodes-container\">\n                        <Nodes handleOutput={this.handleOutput} nodes={this.state.nodes}/>\n                    </div>\n\n                </div>\n\n                <div className=\"fixed-elems\">\n\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.toggleHelp}> Help\n                        <div className=\"help-icon\">\n                            <img src={icon} alt=\"\" />\n                        </div>\n                    </Button>\n                    <br/>\n                    <Drawer data={this.drawerData} />\n\n                </div>\n\n                {this.state.showHelp ? <Help close={this.toggleHelp} /> : null}\n\n            </div>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'fontsource-roboto';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App></App>\n\n  // </React.StrictMode>,\n  , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}